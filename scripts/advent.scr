/*
    Trying to build a minimal thing like the Colossal Cave Adventure,
    to test drive the interpreter, and have some fun along the way.
*/

class Maze {
    public startRoom;

    public function print() {
    }
    public function makeRoom() {
        descriptions = ["big", "huge", "tall", "enormous", "narrow", "low-ceiling"];
        nouns = ["room", "hall", "corridor", "passage"];
        descr = descriptions[rand() % descriptions.length] 
                + " " 
                + nouns[rand() % nouns.length];
        
        exits = [
            rand() & 1 > 0,
            rand() & 1 > 0,
            rand() & 1 > 0,
            rand() & 1 > 0
        ];
        room = new(Room, descr, exits);
        output("Room is:", room);
        return room;
    }
}

class Room {
    size = 'small'; // tiny, roomy, big, enormous. etc
    type = 'cave'; // hall, corridor, passage, etc.
    exits = [];
    items = [];

    function initialize() {
    }
    public function toString() {
    }
    public function description() {
    }
}

class Item {
    name = '';
    needsItem = '';
}

class Player {
    inventory = [];
    public function print() {
    }
    public function pick(item) {
    }
    public function drop(item) {
    }
    public function use(item) {

    }
}

class Game {
    maze;
    player;
    currentRoom;

    function prepare() {
        this.maze = new(Maze);
        this.player = new(Player);
        this.currentRoom = this.maze.startRoom;
    }
    function getCommand() {
        output("Enter command, 'h' for help, or 'q' to quit");
        return input();
    }

    function doHelp() {
        output("Enter various commands in semi natural language. Usual format is <verb> <noun>. Good luck!");
    }

    function handleCommand(cmd) {
        if (cmd == "help" || cmd == "h") {
            this.doHelp();
        } else if (cmd == "debug") {
            output("maze:");
            output(maze);
        } else if (cmd == "rand") {
            output("A random number is", rand());
        } else {
            output("I don't know this");
        }
    }

    public function run() {
        srand(0); // set to non-zero for specific seed
        this.prepare();

        while (true) {
            this.presentRoom();
            cmd = this.getCommand();
            if (cmd == "q" || cmd == "quit")
                break;
            this.handleCommand(cmd);
        }

    }
}

new(Game).run();
